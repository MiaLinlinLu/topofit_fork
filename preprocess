#!/usr/bin/env python

"""
Script to preprocess FreeSurfer surfaces for training
TopoFit models. If this code is useful to you, please cite:

TopoFit: Rapid Reconstruction of Topologically-Correct Cortical Surfaces
Andrew Hoopes, Juan Eugenio Iglesias, Bruce Fischl, Douglas Greve, Adrian Dalca
Medical Imaging with Deep Learning. 2022.
"""

import os
import argparse
import shutil
import surfa as sf
import topofit


parser = argparse.ArgumentParser()
parser.add_argument('subj', help='full path to recon-all FreeSurfer subject')
args = parser.parse_args()

# make sure FS has been sourced in the env
if shutil.which('mri_surf2surf') is None:
    sf.system.fatal('cannot find mri_surf2surf in system path, has freesurfer been sourced?')

fshome = os.environ.get('FREESURFER_HOME')
if fshome is None:
    sf.system.fatal('FREESURFER_HOME is not set in the env, has freesurfer been sourced?')

# set SUBJECTS_DIR manually based on path to input subject
subjects_dir = os.path.dirname(args.subj)
os.environ['SUBJECTS_DIR'] = subjects_dir
basename = os.path.basename(args.subj)

# make sure fsaverage is accessible from the SUBJECTS_DIR
#if not os.path.exists(os.path.join(subjects_dir, 'fsaverage')):
#    sf.system.fatal(
#        f'fsaverage subject does not exist in the base directory `{subjects_dir}`, '
#         'so you must link it by running:\n\n'
#        f'ln -s $FREESURFER_HOME/subjects/fsaverage {subjects_dir}/fsaverage\n')

# compute talairach.xfm.lta if it doesn't exist
if os.path.isdir('ltafiles'):
    id = args.subj.split('/')[-1]
    cmd = f'lta_convert --src {args.subj}/mri/orig.mgz ' \
            f'--trg {fshome}/average/mni305.cor.mgz --inxfm {args.subj}/mri/transforms/talairach.xfm ' \
            f'--outlta ltafiles/{id}.talairach.xfm.lta --subject fsaverage --ltavox2vox'
    if sf.system.run(cmd) != 0:
        sf.system.fatal('could not run lta_convert command')
elif not os.path.isfile(f'{args.subj}/mri/transforms/talairach.xfm.lta'):
    try:
        cmd = f'lta_convert --src {args.subj}/mri/orig.mgz ' \
            f'--trg {fshome}/average/mni305.cor.mgz --inxfm {args.subj}/mri/transforms/talairach.xfm ' \
            f'--outlta {args.subj}/mri/transforms/talairach.xfm.lta --subject fsaverage --ltavox2vox'
        if sf.system.run(cmd) != 0:
            sf.system.fatal('could not run lta_convert command')
    except:
        print('you may want to create folder ltafiles in project base directory if you have read only access to your data')
# cycle through hemispheres

for i, hemi in enumerate(('lh', 'rh')):
    if os.path.isdir('whiteicosurf'):#this path is for if you don't have write access to your data. it is messy, but will work. so shh. no duplicate ids.
        s = ['..' for i in range(len(args.subj.split('/'))-2)]
        s = '/'.join(s)
        id = args.subj.split('/')[-1]
        print()
        cwd = os.getcwd()
        cmd = f'mri_surf2surf --mapmethod nnf --s {basename} --hemi {hemi} --sval-xyz white ' \
          f'--trgsubject {s}$FREESURFER_HOME/subjects/fsaverage --tval {cwd}/whiteicosurf/{id}.{hemi}.white.ico.surf ' \
          f'--tval-xyz {args.subj}/mri/norm.mgz'
        if sf.system.run(cmd) != 0:
            sf.system.fatal('could not run mri_surf2surf command')
    else:    
        try:
            # run the mesh resampling
            cmd = f'mri_surf2surf --mapmethod nnf --s {basename} --hemi {hemi} --sval-xyz white ' \
                f'--trgsubject fsaverage --tval {args.subj}/surf/{hemi}.white.ico.surf ' \
                f'--tval-xyz {args.subj}/mri/norm.mgz'
            if sf.system.run(cmd) != 0:
                sf.system.fatal('could not run mri_surf2surf command')
        except:
            print('you may need to create directory whiteicosurf in your base directory if you have read only access to your data')
print('\nTopoFit preprocessing complete!')
